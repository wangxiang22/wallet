<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinlian.biz.dao.TWalletTradeOrderMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.xinlian.biz.model.TWalletTradeOrder">
        <id column="id" property="id"/>
        <result column="uid" property="uid"/>
        <result column="currency_id" property="currencyId"/>
        <result column="currency_code" property="currencyCode"/>
        <result column="trade_address" property="tradeAddress"/>
        <result column="trade_currency_num" property="tradeCurrencyNum"/>
        <result column="trade_fee" property="tradeFee"/>
        <result column="miners_fee" property="minersFee"/>
        <result column="trade_status" property="tradeStatus"/>
        <result column="trade_type" property="tradeType"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="fail_reason" property="failReason"/>
        <result column="counter_party_uid" property="counterPartyUid"/>
        <result column="counter_party_user_name" property="counterPartyUserName"/>
        <result column="counter_party_mobile" property="counterPartyMobile"/>
        <result column="tx_id" property="txId"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <resultMap id="SimpleCurrencyTradeInfo" type="com.xinlian.biz.model.SimpleCurrencyTradeInfo">
        <result column="uid" property="uid"/>
        <result column="currency_id" property="currencyId"/>
        <result column="currency_code" property="currencyCode"/>
        <result column="trade_status" property="tradeStatus"/>
        <result column="trade_currency_num" property="tradeCurrencyNum"/>
        <result column="trade_type" property="tradeType"/>
        <result column="create_time" property="createTime"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, uid, currency_id, currency_code, trade_address, trade_currency_num, trade_fee, trade_status, trade_type, tx_id, create_time,update_time,dispose_check_time,counter_party_user_name,counter_party_mobile
    </sql>


    <update id="updateWalletTradeOrder" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        update t_wallet_trade_order
        <set>
            <if test="tradeStatus!=null">
                trade_status = #{tradeStatus},
            </if>
            <if test="tradeFee!=null">
                trade_fee = #{tradeFee},
            </if>
            <if test="txId!=null and txId!=''">
                tx_id = #{txId},
            </if>
            <if test="minersFee!=null">
                miners_fee = #{minersFee},
            </if>
            <if test="failReason!=null">
                fail_reason = #{failReason},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="failReason != null and failReason != ''">
                fail_reason = #{failReason},
            </if>
            update_time = CURRENT_TIMESTAMP,
        </set>
        where id = #{id}
        <if test="oldTradeStatus != null">
            and trade_status = #{oldTradeStatus}
        </if>
    </update>

    <update id="updatePledgeTradeOrder" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        update t_wallet_trade_order
        <set>
            <if test="tradeStatus != null">
                trade_status = #{tradeStatus},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="failReason != null and failReason != ''">
                fail_reason = #{failReason},
            </if>
            update_time = CURRENT_TIMESTAMP,
        </set>
        where id = #{id}
    </update>

    <select id="getByCriteria" resultMap="BaseResultMap" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        select
        <include refid="Base_Column_List"/>
        from t_wallet_trade_order
        <where>
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="txId!=null and txId!=''">
                and tx_id = #{txId}
            </if>
            <if test="tradeAddress!=null and tradeAddress!=''">
                and trade_address = #{tradeAddress}
            </if>
        </where>
        limit 1
    </select>

    <insert id="saveModel" parameterType="com.xinlian.biz.model.TWalletTradeOrder" useGeneratedKeys="true"
            keyProperty="id">
        insert into t_wallet_trade_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="currencyId != null">
                currency_id,
            </if>
            <if test="currencyCode != null">
                currency_code,
            </if>
            <if test="tradeAddress != null">
                trade_address,
            </if>
            <if test="tradeCurrencyNum != null">
                trade_currency_num,
            </if>
            <if test="tradeFee !=null">
                trade_fee,
            </if>
            <if test="tradeStatus !=null">
                trade_status,
            </if>
            <if test="tradeType !=null">
                trade_type,
            </if>
            <if test="des !=null">
                des,
            </if>
            <if test="minersFee!=null">
                miners_fee,
            </if>
            <if test="txId != null">
                tx_id,
            </if>
            <if test="counterPartyUserName!=null">
                counter_party_user_name,
            </if>
            <if test="counterPartyMobile != null">
                counter_party_mobile,
            </if>
            <if test="remark!=null">
                remark,
            </if>
            <if test="tradeSystemCode!=null">
                trade_system_code,
            </if>
            <if test="disposeCheckTime!=null">
                dispose_check_time,
            </if>
            <if test="counterPartyUid != null">
                counter_party_uid,
            </if>
            create_time,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">
                #{uid},
            </if>
            <if test="currencyId != null">
                #{currencyId},
            </if>
            <if test="currencyCode != null">
                #{currencyCode},
            </if>
            <if test="tradeAddress != null">
                #{tradeAddress},
            </if>
            <if test="tradeCurrencyNum != null">
                #{tradeCurrencyNum},
            </if>
            <if test="tradeFee !=null">
                #{tradeFee},
            </if>
            <if test="tradeStatus !=null">
                #{tradeStatus},
            </if>
            <if test="tradeType !=null">
                #{tradeType},
            </if>
            <if test="des !=null">
                #{des},
            </if>
            <if test="minersFee!=null">
                #{minersFee},
            </if>
            <if test="txId != null">
                #{txId},
            </if>
            <if test="counterPartyUserName!=null">
                #{counterPartyUserName},
            </if>
            <if test="counterPartyMobile != null">
                #{counterPartyMobile},
            </if>
            <if test="remark!=null">
                #{remark},
            </if>
            <if test="tradeSystemCode!=null">
                #{tradeSystemCode},
            </if>
            <if test="disposeCheckTime!=null">
                CURRENT_TIMESTAMP,
            </if>
            <if test="counterPartyUid != null">
                #{counterPartyUid},
            </if>
            CURRENT_TIMESTAMP,
        </trim>
    </insert>


    <select id="getTradeInfo" resultMap="SimpleCurrencyTradeInfo"
            parameterType="com.xinlian.common.request.TradeInfoReq">
        SELECT
         uid,
        id as tradeId,
        currency_id,
        currency_code,
        trade_currency_num,
        trade_type,
        trade_status,
        des,
        create_time
        FROM
        t_wallet_trade_order
        WHERE
        uid =#{uid}
        and currency_id = #{coinId}
        <if test="type !=null and type != '' ">
            and trade_type=#{type}
        </if>
        order by id desc
    </select>

    <select id="getOneTradeInfo" resultMap="BaseResultMap">
        select trade_currency_num,trade_type,
        create_time,trade_address,currency_id,
        id,trade_status,des,
        counter_party_user_name,counter_party_mobile,
        currency_code,fail_reason,tx_id
        from t_wallet_trade_order
        where id = #{id}
    </select>

    <select id="getCurrencyBalanceInfo" resultType="com.xinlian.common.response.CurrencyBalanceRes">
        select twi.balance_num total,
        twi.frozen_num frozen,
        tcr.icon,
        tcr.coinname
        from t_wallet_info twi
        JOIN t_currency_manage tcr ON tcr.currency_id=twi.currency_id
        where twi.uid = #{uid} and twi.currency_id=#{coinId}
    </select>

    <select id="getAdminAuditPassTradeOrder" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_wallet_trade_order
        where trade_status = 2 and trade_type = 2 and des = '提币'
        order by id asc
        limit 1
    </select>

    <select id="queryRecharge" resultMap="BaseResultMap" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        select uinfo.user_name as userName,
        uinfo.server_node_id as serverNodeId,
        uinfo.server_node_name as serverNodeName,
        torder.id, torder.uid, torder.create_time,torder.update_time,torder.des,
        torder.currency_id, torder.currency_code, trade_address, trade_currency_num, trade_fee, trade_status, trade_type, tx_id,
        counter_party_user_name,counter_party_mobile,fail_reason,remark
        from t_user_info uinfo
        left join t_wallet_trade_order torder on uinfo.uid = torder.uid
        <where>
            <if test="uid!=null">
                and uinfo.uid = #{uid}
            </if>
            <if test="currencyCode !=null and currencyCode!=''">
                and torder.currency_code = #{currencyCode}
            </if>
            <if test="tradeAddress !=null and tradeAddress!=''">
                and torder.trade_address = #{tradeAddress}
            </if>
            <if test="tradeSystemCode!=null and tradeSystemCode!=''">
                and trade_system_code = #{tradeSystemCode}
                and torder.trade_status = 7 and torder.trade_type = 1
            </if>
            <if test="des!=null and des!=''">
                and torder.des = #{des}
            </if>
            <if test="queryDisposeCheckTimeStartDate!=null and queryDisposeCheckTimeStartDate!=''">
                and torder.dispose_check_time &gt;= DATE_FORMAT(#{queryDisposeCheckTimeStartDate}, '%Y-%m-%d %H-%i-%s')
            </if>
            <if test="queryDisposeCheckTimeEndDate!=null and queryDisposeCheckTimeEndDate!=''">
                and torder.dispose_check_time &lt;= DATE_FORMAT(#{queryDisposeCheckTimeEndDate}, '%Y-%m-%d %H-%i-%s')
            </if>
        </where>
        order by torder.id desc
    </select>

    <select id="query" resultMap="BaseResultMap" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        select
        uinfo.user_name as userName,
        uinfo.server_node_id as serverNodeId,
        uinfo.server_node_name as serverNodeName,
        torder.id, torder.uid, torder.create_time,torder.update_time,torder.des,
        currency_id, currency_code, trade_address, trade_currency_num, trade_fee, trade_status, trade_type, tx_id,
        counter_party_uid,counter_party_user_name,counter_party_mobile,fail_reason,remark
        FROM t_wallet_trade_order torder
        LEFT JOIN t_user_info uinfo on uinfo.uid = torder.uid
        <where>
            <if test="tradeStatus!=null and tradeStatus!=-1">
                and torder.trade_status = #{tradeStatus}
            </if>
            <if test="tradeStatus!=null and tradeStatus==-1">
                and torder.trade_status in (2,3,5)
            </if>
            <if test="queryType==null">
                and torder.trade_status in (1,2,3,4,5,6,7)
                and torder.trade_type = 2
                and torder.des = '提币'
            </if>
            <if test="queryType!=null and queryType == 'queryType' and tradeStatus==''">
                and `trade_status` in (1,2,3,4,5,6,7)
                and `trade_type` in (1,2,3,4,6,8,20,75,76,90,91,100)
            </if>
            <if test="queryType!=null and queryType == 'queryType' and tradeStatus==null">
                and `trade_status` in (1,2,3,4,5,6,7)
                and `trade_type` in (1,2,3,4,6,8,20,75,76,90,91,100)
            </if>
            <if test="des!=null and des!=''">
                and torder.des = #{des}
            </if>
            <if test="tradeCurrencyNumMin !=null ">
                and torder.trade_currency_num &gt;= #{tradeCurrencyNumMin}
            </if>
            <if test="tradeCurrencyNumMax!=null">
                and torder.trade_currency_num &lt;= #{tradeCurrencyNumMax}
            </if>
            <if test="uid!=null and uid!=0">
                and torder.uid = #{uid}
            </if>
            <if test="currencyCode !=null and currencyCode!=''">
                and currency_code = #{currencyCode}
            </if>
            <if test="tradeAddress !=null and tradeAddress!=''">
                and trade_address = #{tradeAddress}
            </if>
            <if test="userName!=null and userName != ''">
                and uinfo.user_name = #{userName}
            </if>
            <if test="serverNodeId!=null">
                and server_node_id = #{serverNodeId}
            </if>
            <if test="queryCreatTimeStartDate!=null and queryCreatTimeStartDate!=''">
                and torder.create_time &gt;= DATE_FORMAT(#{queryCreatTimeStartDate}, '%Y-%m-%d %H-%i-%s')
            </if>
            <if test="queryCreatTimeEndDate!=null and queryCreatTimeEndDate!=''">
                and torder.create_time &lt;= DATE_FORMAT(#{queryCreatTimeEndDate}, '%Y-%m-%d %H-%i-%s')
            </if>
            <if test="queryDisposeCheckTimeStartDate!=null and queryDisposeCheckTimeStartDate!=''">
                and torder.dispose_check_time &gt;= DATE_FORMAT(#{queryDisposeCheckTimeStartDate}, '%Y-%m-%d %H-%i-%s')
            </if>
            <if test="queryDisposeCheckTimeEndDate!=null and queryDisposeCheckTimeEndDate!=''">
                and torder.dispose_check_time &lt;= DATE_FORMAT(#{queryDisposeCheckTimeEndDate}, '%Y-%m-%d %H-%i-%s')
            </if>
        </where>
        order by torder.id desc
    </select>

    <select id="queryToday" resultType="com.xinlian.biz.model.WalletTradeCount">
        select sum(trade_currency_num) allAmount,count(0) allCount
         from t_wallet_trade_order
         where uid=#{uid}
          and DATE_FORMAT(create_time, '%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
          and isin=1
    </select>

    <select id="queryTodayWithdrawAmount" resultType="com.xinlian.biz.model.WalletTradeCount">
        select sum(trade_currency_num) allAmount,count(0) allCount
         from t_wallet_trade_order
         where uid=#{uid}
          and DATE_FORMAT(create_time, '%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
          and isin=1
          and trade_type=2
    </select>

    <select id="queryTodayDespositAmount" resultType="com.xinlian.biz.model.WalletTradeCount">
        select sum(trade_currency_num) allAmount,count(0) allCount
         from t_wallet_trade_order
         where uid=#{uid}
          and DATE_FORMAT(create_time, '%m-%d-%Y') = DATE_FORMAT(NOW(),'%m-%d-%Y')
          and isin=1
          and trade_type=1
    </select>

    <insert id="batchChainOwnerTradeRecord" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        insert into t_wallet_trade_order(
        uid,
        currency_id,
        currency_code,
        trade_currency_num,
        trade_status,
        trade_type,
        des,
        create_time,
        remark,
        dispose_check_time,
        trade_system_code
        )
        values
        <foreach collection="list" item="record" separator=",">
            ( #{record.uid}
            ,#{record.currencyId}
            ,#{record.currencyCode}
            ,#{record.tradeCurrencyNum}
            ,#{record.tradeStatus}
            ,#{record.tradeType}
            ,#{record.des}
            ,CURRENT_TIMESTAMP
            ,#{record.remark}
            ,CURRENT_TIMESTAMP
            ,#{record.tradeSystemCode}
            )
        </foreach>
    </insert>

    <insert id="exchangeWalletTrade" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        insert into t_wallet_trade_order(
        uid,
        currency_id,
        currency_code,
        trade_currency_num,
        trade_status,
        trade_type,
        create_time,
        des,
        isin)
        values
            (#{uid}
            ,#{currencyId}
            ,#{currencyCode}
            ,#{tradeCurrencyNum}
            ,#{tradeStatus}
            ,#{tradeType}
            ,CURRENT_TIMESTAMP
            ,#{des}
            ,#{isin})
    </insert>


    <select id="getTodayWalletData" resultType="java.math.BigDecimal">
        select sum(trade_currency_num) from t_wallet_trade_order
        <where>
            and trade_status = 7 and trade_type = 1
            <if test="currencyCode!=null and currencyCode == 'USDT'">
                and des = '链上充值' and currency_code = #{currencyCode}
            </if>
            <if test="currencyCode!=null and currencyCode == 'CAT'">
                and des in('rocket转入','矿池-转入') and currency_code = #{currencyCode}
            </if>
            <if test="currencyCode!=null and currencyCode == 'CAG'">
                and currency_code = #{currencyCode}
            </if>
            <if test="currencyCode!=null and currencyCode == 'GPT'">
                and currency_code = #{currencyCode}
            </if>
            and to_days(create_time) = to_days(now())
        </where>
    </select>


    <select id="findPledgePage" resultType="com.xinlian.common.dto.PledgeManagePageDto">
        select tui.uid as uid,tui.user_name as userName,tui.server_node_id as nodeId,tui.server_node_name as nodeName,
               twto.trade_currency_num as pledgeNum,twto.trade_status as tradeStatus,twto.create_time as createTime,
               twto.remark as remark,twto.fail_reason as failReason
        from t_wallet_trade_order as twto
        left join t_user_info as tui on twto.uid = tui.uid
        <where>
            twto.des = #{des} and twto.trade_type = 2
            <if test="uid != null">
                and tui.uid = #{uid}
            </if>
            <if test="nodeId != null">
                and tui.server_node_id = #{nodeId}
            </if>
            <if test="pledgeStatus == null">
                and twto.trade_status in (1,4,7)
            </if>
            <if test="pledgeStatus != null">
                and twto.trade_status = #{pledgeStatus}
            </if>
            <if test="startTime != null and startTime != '' and endTime != null and endTime != ''">
                and twto.create_time between #{startTime} and #{endTime}
            </if>
        </where>
        order by twto.create_time desc
    </select>


    <select id="getUidsByIdxQyTradeLog" resultMap="BaseResultMap" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        select <include refid="Base_Column_List"/>
        from t_wallet_trade_order
        where trade_status = #{tradeStatus}
        and trade_type = #{tradeType}
        and des = #{des}
        and currency_code = #{currencyCode}
    </select>

    <select id="getUidsByIdxQyTradeLogAndUids" resultMap="BaseResultMap" parameterType="com.xinlian.biz.model.TWalletTradeOrder">
        select <include refid="Base_Column_List"/>
        from t_wallet_trade_order
        where trade_status = #{walletOrder.tradeStatus}
        and trade_type = #{walletOrder.tradeType}
        and des = #{walletOrder.des}
        and currency_code = #{walletOrder.currencyCode}
        <if test="uids!=null">
            and uid in
            <foreach collection="uids" item="item" open="(" close=")" separator=",">
                #{item}
            </foreach>
        </if>
    </select>


    <select id="findTakeInAmount" resultType="java.math.BigDecimal">
        select sum(trade_currency_num)
        from t_wallet_trade_order
        where id &gt;= (
                        select id
                        from t_wallet_trade_order
                        where create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
                        order by id asc
                        limit 1)
        and trade_status = 7
        and trade_type in (1,2,3)
        and trade_currency_num &gt; 0
        and create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
    </select>


    <select id="findExpenditureAmount" resultType="java.math.BigDecimal">
        select sum(trade_currency_num)
        from t_wallet_trade_order
        where id &gt;= (
                        select id
                        from t_wallet_trade_order
                        where create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
                        order by id asc
                        limit 1)
        and trade_status = 7
        and trade_type in (1,2,3)
        and trade_currency_num &lt; 0
        and create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
    </select>


    <select id="findNeedDeductAmount" resultType="java.math.BigDecimal">
        select sum(trade_currency_num)
        from t_wallet_trade_order
        where trade_status= 6
        and trade_type = 1
        and des = "挂单时间过期退还"
        and create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
    </select>


    <select id="findTradeTotalInAmount" resultType="java.math.BigDecimal">
        select sum(trade_currency_num)
        from t_wallet_trade_order
        where trade_status= #{tradeStatus}
        and trade_type = #{tradeType}
        and des = #{des}
        and create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
        and trade_currency_num &gt; 0
    </select>

    <select id="findTradeTotalOutAmount" resultType="java.math.BigDecimal">
        select sum(trade_currency_num)
        from t_wallet_trade_order
        where trade_status= #{tradeStatus}
        and trade_type = #{tradeType}
        and des = #{des}
        and create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
        and trade_currency_num &lt; 0
    </select>

    <select id="findPledgeMiningPopulation" resultType="java.lang.Long">
        select count(id)
        from t_wallet_trade_order
        where trade_status in (1,4,7)
        and trade_type= 2
        and des = '保证金交纳'
        and create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
    </select>

    <select id="findPledgeMiningAmount" resultType="java.math.BigDecimal">
        select sum(trade_currency_num)
        from t_wallet_trade_order
        where trade_status in (1,4,7)
        and trade_type= 2
        and des = '保证金交纳'
        and create_time &gt;= DATE_FORMAT(#{startTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{endTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
    </select>

    <select id="findDifferentTakeInAmount" resultType="java.math.BigDecimal" parameterType="java.lang.String">
        select sum(trade_currency_num) from t_wallet_trade_order
        where trade_status in (1,4,6,7)
        and trade_type in (1,2)
        and des in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and create_time &gt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
        and trade_currency_num &gt; 0
    </select>

    <select id="findDifferentExpenditureAmount" resultType="java.math.BigDecimal" parameterType="java.lang.String">
        select sum(trade_currency_num) from t_wallet_trade_order
        where trade_status in (1,7)
        and trade_type in (2,3)
        and des in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and create_time &gt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
        and trade_currency_num &lt; 0
    </select>

    <select id="findDifferentFreezeAmountByStatusOne" resultType="java.math.BigDecimal" parameterType="java.lang.String">
        select sum(trade_currency_num) from t_wallet_trade_order
        where trade_status = 1
        and trade_type in (2,3)
        and des in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and create_time &gt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
        and trade_currency_num &lt; 0
    </select>

    <select id="findDifferentFreezeAmountByStatusSeven" resultType="java.math.BigDecimal" parameterType="java.lang.String">
        select sum(trade_currency_num) from t_wallet_trade_order
        where trade_status = 7
        and trade_type in (2,3)
        and des in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and create_time &gt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 00:00:00')
        and create_time &lt;= DATE_FORMAT(#{reqTime}, '%Y-%m-%d 23:59:59')
        and currency_id = #{currencyId}
        and trade_currency_num &lt; 0
    </select>
</mapper>
