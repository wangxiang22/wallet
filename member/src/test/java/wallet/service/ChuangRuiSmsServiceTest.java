package wallet.service;

import com.xinlian.common.request.RegisterReq;
import com.xinlian.member.biz.chuangrui.ChuangRuiSmsService;
import com.xinlian.member.biz.service.impl.TUserMessageImpl;
import com.xinlian.member.biz.smsvendor.aliyun.AliyunSmsService;
import com.xinlian.member.biz.smsvendor.sendcloud.SendCloudSmsService;
import com.xinlian.member.biz.smsvendor.yunpian.YunPianSmsService;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import wallet.service.base.BaseServiceTest;

/**
 * @author Song
 * @date 2020-06-28 20:49
 * @description
 */
public class ChuangRuiSmsServiceTest extends BaseServiceTest {

    @Autowired
    private ChuangRuiSmsService chuangRuiSmsService;
    @Autowired
    private SendCloudSmsService sendCloudService;
    @Autowired
    private YunPianSmsService yunPianSmsService;
    @Autowired
    private AliyunSmsService aliyunSmsService;
    @Autowired
    private TUserMessageImpl userMessage;

    @Test
    public void sendSmsTestByChuangRui(){
        RegisterReq req = new RegisterReq();
        req.setType(1);
        chuangRuiSmsService.sendSmsByOtherArea("12075397708","255321",req,"sms_re1");
    }


    @Test
    public void batchSendSmsTestByChuangRui(){
        RegisterReq req = new RegisterReq();
        req.setType(2);
        String mobileStr = "13008062365,13008397800";//"13012660095,13031406722,13036544141,13040540944,13049349513,13056042113,13059033368,13060156732,13094806931,13096628361,13103453093,13110597685,13110680631,13115508923,13136568287,13149361275,13152959886,13165807242,13171546021,13177024922,13195561571,13205937783,13206957799,13209980716,13227965015,13230231086,13237672809,13251651928,13252636877,13256194133,13287996167,13301789367,13303578152,13303579358,13303679979,13304696960,13311975508,13311999013,13324202366,13329539998,13351970007,13362550312,13363270746,13363551893,13377212306,13383246889,13386090526,13389988719,13396688466,13399013153,13409077580,13423647656,13429762213,13456918800,13504913855,13512668932,13512993262,13513971881,13535890605,13544960280,13562225959,13565261232,13576589022,13585783237,13593799512,13593962666,13594603608,13594737111,13616788867,13618181371,13632988693,13634357673,13639487871,13655277388,13655621286,13676584513,13691315311,13697121301,13697374405,13700553866,13701934326,13701937887,13703657717,13704123377,13706430432,13716551537,13732276839,13735969268,13738604266,13752357777,13772740529,13777628101,13783802963,13785363888,13792017770,13792742419,13792864617,13798518623,13801910512,13805139649,13810149979,13810765623,13819121783,13821445673,13832410616,13844275226,13846677222,13850718961,13851297395,13853339422,13855327682,13857394394,13858993888,13859613566,13859835585,13872617578,13872974107,13873608868,13890696448,13893615671,13904348128,13905936719,13908735982,13916294580,13918144961,13929536883,13931744481,13935706685,13935728361,13943267757,13945337750,13945576051,13946848551,13957069066,13957252250,13957650024,13958667212,13961541006,13966227702,13968061278,13968063453,13978349556,13982064703,13983169166,13994282467,13994685916,13999614131,14784694000,15038301538,15047141569,15068322966,15075357290,15093817886,15103556007,15124688915,15133973357,15144001481,15145574366,15146326968,15150303398,15153092382,15153316850,15161680867,15169340035,15172245621,15188373792,15188888026,15223585937,15233375888,15245960424,15257648175,15275912519,15283188883,15315113990,15375695607,15395135788,15399800081,15500553388,15522552868,15571645959,15574519218,15585512389,15617583133,15620872328,15629750666,15630044433,15723310225,15756753358,15822668620,15833303488,15835195722,15835511770,15841288181,15842475453,15852757444,15860860789,15866686475,15869177629,15871993898,15872163418,15872289157,15886190666,15898002791,15908618168,15910578878,15933518788,15934175518,15946100098,15955582079,15956799823,15957680770,15961996766,15963623088,15966348896,15968837956,15972618280,15985924254,15988988765,15990827878,16235501444,16523717937,16523717951,16557260084,16621762878,16643556869,17032350412,17037873960,17038261189,17038867361,17055520071,17055983220,17063980106,17068652124,17068660344,17069010079,17078210458,17079907988,17088557338,17088557862,17089892028,17096526063,17119310072,17120700029,17121119416,17132906654,17151760072,17153173203,17159618769,17168870298,17331719625,17338170543,17371624698,17388203616,17399758396,17399759296,17521323292,17521648338,17534978183,17600256818,17604103319,17689467865,17714522517,17717525137,17751688000,17753607758,17853070322,17864340149,18005883095,18031397613,18035701258,18047192169,18062359521,18078553945,18080500853,18098836858,18115003351,18120856777,18186868380,18220862679,18221935206,18235419882,18263985108,18267628862,18300525776,18333610360,18341835230,18342824550,18355960326,18356785575,18361098105,18367837678,18367925191,18401231499,18504284624,18507269682,18507702973,18516777501,18553248872,18560909790,18562358157,18569789231,18571345695,18580504232,18583965286,18587371799,18605863597,18607455863,18622114797,18634799235,18636905858,18650968996,18654388889,18656856507,18658635308,18659386339,18661269637,18666526726,18696382265,18703130957,18724887539,18734561159,18746120977,18746399221,18746964006,18758667308,18760083592,18809728941,18863646679,18866879506,18870103650,18880962716,18908793777,18921840039,18931572031,18950287711,18953027781,18968580531,18968680864,18972313528,18977931111,18988793976,19162381541,19846770257,19871860623,19871861093,19935924436,19949311513";

        String [] mobileArray = mobileStr.split(",");
        for(int i=0;i<mobileArray.length;i++) {
            chuangRuiSmsService.sendSmsByOtherArea(mobileArray[i], "经系统检测，您的账户存在异常资产操作被冻结，详情请咨询节点客服！", req, "sms_re1");
        }
    }





    @Test
    public void sendSms(){
        RegisterReq registerReq = new RegisterReq();
        registerReq.setCountryCode(1);
        registerReq.setPhone("3852492632");
        System.err.println(userMessage.sendQuerySms(registerReq));
    }


    @Test
    public void sendSmsTestBySendCloud(){
        RegisterReq req = new RegisterReq();
        req.setType(2);
        sendCloudService.sendSmsOther("12075397708","2301421",req,"sms_re1");

    }

    @Test
    public void sendSmsTestByAliyun(){
        RegisterReq req = new RegisterReq();
        req.setType(1);
        aliyunSmsService.sendSmsOther("12075397708","318312",req,"sms_re1");

    }


    @Test
    public void sendSmsTestByYunPian(){
        RegisterReq req = new RegisterReq();
        req.setType(1);
        yunPianSmsService.sendSmsByOther("12075397708","228312",req,"sms_re12");

    }
}
